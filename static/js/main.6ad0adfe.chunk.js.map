{"version":3,"sources":["assets/about.jpg","components/home.jsx","components/about.jsx","components/works.jsx","components/imageGallery.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","_useState","useState","_useState2","Object","slicedToArray","showNav","setShowNav","react_default","a","createElement","Fragment","className","onClick","CSSTransition","in","timeout","classNames","unmountOnExit","react_router_dom","to","href","target","rel","About","src","about","alt","Works","imageGallery","name","albumLength","header","images","toConsumableArray","Array","keys","map","number","concat","Images","props","lightboxImage","setLightboxImage","Lightbox","image","closeLightbox","process","key","App","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ad0adfe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.1e5549a9.jpg\";","import React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Link } from 'react-router-dom';\n\nimport './home.css';\n\nexport function Home() {\n  const [showNav, setShowNav] = useState(false);\n\n  return (\n    <>\n      <main className=\"container background\" onClick={() => setShowNav(!showNav)}>\n        <CSSTransition in={showNav} timeout={200} classNames=\"nav\" unmountOnExit>\n          <section className=\"container nav-background\">\n            <nav>\n              <h1>In bed</h1>\n              <ul>\n                <li>\n                  <Link to=\"/about\">about</Link>\n                </li>\n                <li>\n                  <Link to=\"/works\">works</Link>\n                </li>\n                <li>\n                  <a href=\"mailto:naoinbed@gmail.com\">contact</a>\n                </li>\n                <li>\n                  <a href=\"https://www.instagram.com/in__bed/\" target=\"_blank\" rel=\"noopener noreferrer\">Instagram</a>\n                </li>\n              </ul>\n            </nav>\n          </section>\n        </CSSTransition>\n      </main>\n    </>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './about.css';\nimport about from '../assets/about.jpg';\n\nexport function About() {\n  return (\n    <article>\n      <img className=\"about\" src={about} alt=\"nao\"/>\n      <h1>\n        <Link to=\"/\">\n          Nao | in bed\n        </Link>\n      </h1>\n      <p className=\"bio\">\n        A Tokyo and Johannesburg Based Photographer.<br/>His artist name is In bed.\n      </p>\n      <ul>\n        <li>\n          <Link to=\"/works\">works</Link>\n        </li>\n        <li>\n          <a href=\"mailto:naoinbed@gmail.com\">contact</a>\n        </li>\n        <li>\n          <a href=\"https://www.instagram.com/in__bed/\" target=\"_blank\" rel=\"noopener noreferrer\">Instagram</a>\n        </li>\n        <li>\n          <Link to=\"/\">back </Link>\n        </li>\n      </ul>\n      <p className=\"location\">Base: Tokyo, Japan & Johannesburg, South Africa</p>\n    </article>\n  )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './works.css';\n\nexport function Works() {\n  return (\n    <article>\n      <ul>\n        <li>\n          <Link to=\"/sweet\">Sweet but Sweet</Link>\n        </li>\n        <li>\n          <Link to=\"/fred\">Ma Homie - Frederico</Link>\n        </li>\n        <li>\n          <Link to=\"/gustavo\">Ma Homie - Gustavo</Link>\n        </li>\n        <li>\n          <Link to=\"/begging\">Begging Culture</Link>\n        </li>\n        <li className=\"back\">\n          <Link to=\"/\">back </Link>\n        </li>\n      </ul>\n    </article>\n  )\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './imageGallery.css';\n\nexport function imageGallery(name, albumLength, header) {\n  const images = [...(\n    [...Array(albumLength).keys()].map(number => `/${name}/${number}.jpg`)\n  )];\n\n  return () => {\n    return (\n      <main>\n        <header>\n          <h1>\n            <Link to=\"/works\">{header}</Link>\n          </h1>\n        </header>\n        <Images images={images}/>\n        <footer>\n          <Link to=\"/works\">back</Link>\n        </footer>\n      </main>\n    )\n  }\n}\n\nfunction Images(props) {\n  let [lightboxImage, setLightboxImage] = useState(null);\n  let {images} = props;\n\n  return (\n    <>\n      {\n        lightboxImage && <Lightbox image={lightboxImage} closeLightbox={() => setLightboxImage(null)}/>\n      }\n      <section className=\"masonry\">\n\n        {\n          images.map(image => {\n            return <img src={process.env.PUBLIC_URL + image} alt=\"\" onClick={() => setLightboxImage(image)} key={image}/>\n          })\n        }\n      </section>\n    </>\n\n  );\n}\n\nfunction Lightbox(props) {\n  let { image, closeLightbox } = props;\n  return (\n    <section className=\"lightbox\" onClick={closeLightbox}>\n      <img src={process.env.PUBLIC_URL + '/large' + image} alt=\"\" onClick={closeLightbox}/>\n    </section>\n  )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\n\nimport { Home } from './components/home';\nimport { About } from './components/about';\nimport { Works } from './components/works';\nimport { imageGallery } from './components/imageGallery';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/works\" component={Works}/>\n        <Route path=\"/sweet\" component={imageGallery('sweet', 19, 'Sweet but Sweet')}/>\n        <Route path=\"/fred\" component={imageGallery('fred', 35, 'Ma Homie - Frederico')}/>\n        <Route path=\"/gustavo\" component={imageGallery('gustavo', 23, 'Ma Homie - Gustavo')}/>\n        <Route path=\"/begging\" component={imageGallery('begging', 8, 'Begging Culture')}/>\n        <Redirect to=\"/\"/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}